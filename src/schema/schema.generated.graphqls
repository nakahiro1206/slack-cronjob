type AddChannelResponse {
  error: String
  success: Boolean!
}

type AddUserResponse {
  success: Boolean!
}

type Channel {
  channelId: ID!
  channelName: String!
  day: Day!
  userIds: [ID!]!
}

enum Day {
  FRIDAY
  MONDAY
  SATURDAY
  SUNDAY
  THURSDAY
  TUESDAY
  WEDNESDAY
}

type Mutation {
  addChannel(channelId: ID!, channelName: String!, day: Day!, userIds: [ID!]!): AddChannelResponse!
  addUser(id: ID!, name: String!): AddUserResponse!
  notify(channelIds: [String!]): NotifyResponse!
  registerUsers(channelId: ID!, userIds: [ID!]!): RegisterUserResponse!
}

type NotifyResponse {
  message: String
  success: Boolean!
}

type Query {
  channels: [Channel!]!
  cronjobSecret: String!
  users: [User!]!
}

type RegisterUserResponse {
  error: String
  success: Boolean!
}

type User {
  id: ID!
  name: String!
}